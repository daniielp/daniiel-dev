---
import { BorderBeam } from "@/components/ui/border-beam"
import { Link } from "@/components/ui/link"
import { Button } from "@/components/ui/button"
import { Code } from "astro:components"
import { ToastFlow } from "@/components/flows/toast-flow"
const { title, description } = Astro.props

const codeExample = `export function useZodForm<Schema extends z.ZodType>(
  props: Omit<UseFormProps<Schema["_input"]>, "resolver"> & {
    schema: Schema;
  },
) {
  const form = useHookForm<Schema["_input"]>({
    ...props,
    resolver: async (data, context, options) => {
      return zodResolver(props.schema)(data, context, options);
    },
  });

  return form;
}`
---

<div class="bg-slate-900 pb-10 pt-10 sm:pb-16 sm:pt-16 lg:overflow-hidden lg:pb-14 lg:pt-8">
  <div class="mx-auto max-w-7xl px-6">
    <div class="flex flex-col gap-4 lg:grid lg:grid-cols-2 lg:gap-8">
      <div
        class="mx-auto max-w-md sm:max-w-2xl sm:text-center md:px-6 lg:flex lg:items-center lg:px-0 lg:text-left"
      >
        <div class="flex flex-col gap-8 lg:py-24">
          <h1 class="text-4xl font-bold tracking-tight text-white sm:text-6xl lg:mt-6 xl:text-6xl">
            {title}
          </h1>
          <p class="mt-3 text-base text-gray-300 sm:mt-5 sm:text-xl lg:text-lg xl:text-xl">
            {description}
          </p>
          <div class="flex flex-wrap gap-2">
            <ToastFlow client:load />
            <Link className="block" variant="outline" href="/cases"
              >Explore More Interactive UI Elements</Link
            >
          </div>
        </div>
      </div>
      <div class="flex items-center justify-center sm:-mb-48 lg:relative lg:m-0">
        <div
          class="relative w-full overflow-hidden rounded-lg bg-slate-950 text-slate-50 shadow-sm"
        >
          <div class="flex flex-col space-y-1.5 p-6">
            <h2 class="text-2xl font-semibold leading-none tracking-tight">
              Creating reusable code
            </h2>
            <p class="text-sm text-slate-500 dark:text-slate-400">
              Below you can see an example of a reusable code snippet I made in TypeScript for
              handeling form inputs using Zod and React-Hook-Form.
            </p>
          </div>
          <div class="pt-0">
            <Code class="rounded-b-lg p-4" code={codeExample} lang="typescript" />
          </div>
          <BorderBeam size={200} borderWidth={2} className="rounded-lg" client:visible />
        </div>
      </div>
    </div>
  </div>
</div>
